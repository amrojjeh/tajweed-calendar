package ui

import (
	"time"
	"fmt"
	"github.com/amrojjeh/tajweed-calendar/internal/cal"
) 

type HomeViewModel struct {
	Months []MonthViewModel
}

func NewHomeViewModel(es []cal.Event) HomeViewModel {
	model := HomeViewModel{
		Months: []MonthViewModel{},
	}
	for i := 1; i <= 12; i++ {
		m := MonthViewModel{}
		for d := 1; d <= cal.Months[time.Month(i)]; d++ {
			dm := DayViewModel{
				Number: d,
				Colors: []string{"white"},
			}
			eventAdded := false
			for _, s := range es {
				if s.IsOn(2024, time.Month(i), d) {
					if eventAdded {
						dm.Colors = append(dm.Colors, s.Color)
						dm.EventDetailsGET = dm.EventDetailsGET + fmt.Sprintf("&id=%v", s.Id)
					} else {
						dm.Colors[0] = s.Color
						dm.EventDetailsGET = fmt.Sprintf("/event-details?id=%v", s.Id)
						eventAdded = true
					}
				}
			}

			m.Days = append(m.Days, dm)
		}
		m.StartingWeekday = int(cal.FirstWeekdayInMonth(2024, time.Month(i)))
		m.Month = time.Month(i).String()
		model.Months = append(model.Months, m)
	}

	return model
}

templ HomePage(m HomeViewModel) {
	@Base() {
		<header>
			<h1>2024</h1>
			@EventDetailsEmpty()
		</header>
		<div class="yaag-calendar">
			for _, m := range m.Months {
				@Month(m)
			}
		</div>
	}
}
